// Code generated by mockery v2.37.0. DO NOT EDIT.

package mocks

import (
	producer "github.com/project-eria/go-wot/producer"
	mock "github.com/stretchr/testify/mock"
)

// PropertyWriteHandler is an autogenerated mock type for the PropertyWriteHandler type
type PropertyWriteHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *PropertyWriteHandler) Execute(_a0 producer.ExposedThing, _a1 string, _a2 interface{}, _a3 map[string]string) error {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 error
	if rf, ok := ret.Get(0).(func(producer.ExposedThing, string, interface{}, map[string]string) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPropertyWriteHandler creates a new instance of PropertyWriteHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPropertyWriteHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *PropertyWriteHandler {
	mock := &PropertyWriteHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
