// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import (
	producer "github.com/project-eria/go-wot/producer"
	mock "github.com/stretchr/testify/mock"
)

// ProtocolServer is an autogenerated mock type for the ProtocolServer type
type ProtocolServer struct {
	mock.Mock
}

// Expose provides a mock function with given fields: _a0, _a1
func (_m *ProtocolServer) Expose(_a0 string, _a1 producer.ExposedThing) {
	_m.Called(_a0, _a1)
}

// Start provides a mock function with given fields:
func (_m *ProtocolServer) Start() {
	_m.Called()
}

// Stop provides a mock function with given fields:
func (_m *ProtocolServer) Stop() {
	_m.Called()
}

// NewProtocolServer creates a new instance of ProtocolServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProtocolServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProtocolServer {
	mock := &ProtocolServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
